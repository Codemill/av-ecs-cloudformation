AWSTemplateFormatVersion: "2010-09-09"
Description: This template will deploy a Cloud Map private DNS namespace which
  allows services to find each other without going through the ALB. A RDS
  Postgres database instance will also be deployed, as well as an S3 bucket
  containing configuration files used by the services. Changes to the
  configuration files will notify SNS which will later trigger a lambda to
  re-deploy the service. Finally there is a CloudWatch log group which the
  different services will send their application logs to.

Parameters:
  LogsRetention:
    Type: Number
    Description: Number of days that application logs are saved
  ApplicationTag:
    Type: String
    Description: Used to tag all resources
  Vpc:
    Type: String
    Description: VPC ID
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: "Public Loadbalancer Security Group"

Resources:
  PrivateDnsNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: av.local
      Vpc: !Ref "Vpc"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  ######################### Security Groups ###########################
  #####################################################################
  RdsDatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to RDS instance
      VpcId: !Ref "Vpc"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  RdsDatabaseSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from Adapter service
      IpProtocol: "tcp"
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref AdapterSG
      GroupId: !Ref RdsDatabaseSG

  AdapterSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Adapter service
      VpcId: !Ref "Vpc"
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AdapterSgIngressALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: "tcp"
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref "PublicLoadBalancerSecurityGroup"
      GroupId: !Ref AdapterSG

  AdapterSgIngressJobs:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: "tcp"
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref "JobsSecurityGroup"
      GroupId: !Ref AdapterSG

  AdapterSgIngressJobsHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: "tcp"
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref "JobsSecurityGroup"
      GroupId: !Ref AdapterSG

  AdapterSgIngressAdapterHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: "tcp"
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref "AdapterSG"
      GroupId: !Ref AdapterSG

  FrontendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Frontend service
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  FrontendSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
      GroupId: !Ref FrontendSecurityGroup

  AnalyzeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Analyze service
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  AnalyzeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the public ALB
      IpProtocol: tcp
      FromPort: 8080
      ToPort: 8080
      SourceSecurityGroupId: !Ref PublicLoadBalancerSecurityGroup
      GroupId: !Ref AnalyzeSecurityGroup

  JobsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database access from adapter/backend
      VpcId: !Ref Vpc
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  JobsSecurityGroupIngressAdapterHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Adapter service
      IpProtocol: tcp
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref AdapterSG
      GroupId: !Ref JobsSecurityGroup

  JobsSgIngressJobsHazelcast:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Access from the Jobs service
      IpProtocol: "tcp"
      FromPort: 5699
      ToPort: 5702
      SourceSecurityGroupId: !Ref JobsSecurityGroup
      GroupId: !Ref JobsSecurityGroup

  ######################## CloudWatch Log Group #######################
  #####################################################################
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: !Ref LogsRetention

  ######################## Configuration Bucket #######################
  #####################################################################
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: frontend
            Topic: !Ref FrontendSettingsUpdatedTopic
      Tags:
        - Key: application
          Value: !Ref ApplicationTag
      VersioningConfiguration:
        Status: Enabled

  FrontendSettingsUpdatedTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: application
          Value: !Ref ApplicationTag

  FrontendSettingsUpdatedTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Resource:
              - !Ref FrontendSettingsUpdatedTopic
            Action: sns:Publish
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId
      Topics:
        - !Ref FrontendSettingsUpdatedTopic

# These are the values output by the CloudFormation template. Be careful
# about changing any of them, because of them are exported with specific
# names so that the other task related CF templates can use them.
Outputs:
  FrontendSettingsUpdatedTopicArn:
    Description: The SNS topic notified when frontend configuration files have changed
    Value: !Ref "FrontendSettingsUpdatedTopic"
    Export:
      Name: !Sub ${AWS::StackName}:FrontendSettingsUpdatedTopicArn
  LogGroup:
    Description: The name of the AV Log Group
    Value: !Ref "LogGroup"
    Export:
      Name: !Sub ${AWS::StackName}:LogGroup
  PrivateDnsNamespace:
    Description: Private DNS namespace
    Value: !Ref "PrivateDnsNamespace"
    Export:
      Name: !Sub ${AWS::StackName}:PrivateDnsNamespace
  RdsDatabaseSG:
    Description: Security group for the RDS instance
    Value: !Ref RdsDatabaseSG
    Export:
      Name: !Sub ${AWS::StackName}:RdsDatabaseSG
  AdapterSG:
    Description: Security group for the Adapter service
    Value: !Ref AdapterSG
    Export:
      Name: !Sub ${AWS::StackName}:AdapterSG
  FrontendSecurityGroup:
    Description: Security group for the Frontend service
    Value: !Ref FrontendSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:FrontendSecurityGroup
  AnalyzeSecurityGroup:
    Description: Security group for the Analyze service
    Value: !Ref AnalyzeSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:AnalyzeSecurityGroup
  JobsSecurityGroup:
    Description: Security group for the Jobs service
    Value: !Ref JobsSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:JobsSecurityGroup

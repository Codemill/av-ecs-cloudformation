AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a service on AWS Fargate, hosted in a private subnet
Parameters:
  StackName:
    Type: String
    Default: production
    Description:
      The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  ServiceName:
    Type: String
    Default: av-runner
    Description: A name for the service
  RepoName:
    Type: String
    Default: 653767197116.dkr.ecr.eu-north-1.amazonaws.com
    Description: The ecr repo and tag to use for image deployment
  RepoImage:
    Type: String
    Default: accurate-video-jobs
    Description: The ecr repo and tag to use for image deployment
  ImageTag:
    Type: String
    Default: 4.0.3
    Description: The ecr repo and tag to use for image deployment
  RegistryCredentias:
    Type: String
    Default: arn:aws:secretsmanager:eu-north-1:653767197116:secret:jfrog-docker-gitlabci-50X7p1
    Description: Credentials to codemill.jfrog.io for pulling docker images
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Default: 2
    Description: How many copies of the service task to run
  Role:
    Type: String
    Default: ""
    Description:
      (Optional) An IAM role to give the service's containers if the code within needs to
      access other AWS resources like S3 buckets, DynamoDB tables, etc

Conditions:
  HasCustomRole: !Not [!Equals [!Ref "Role", ""]]

# The task definition. This is a simple metadata description of what
# container to run, and what resource requirements it has.
Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      Family: !Ref "ServiceName"
      Cpu: !Ref "ContainerCpu"
      Memory: !Ref "ContainerMemory"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue: !Join [":", [!Ref "StackName", "ECSTaskExecutionRole"]]
      TaskRoleArn:
        Fn::If:
          - "HasCustomRole"
          - !Ref "Role"
          - !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: !Ref "ServiceName"
          Cpu: !Ref "ContainerCpu"
          Memory: !Ref "ContainerMemory"
          Image: !Sub
            - "${repoName}/${repoImage}:${imageTag}"
            - repoName: !Ref RepoName
              repoImage: !Ref RepoImage
              imageTag: !Ref ImageTag
          RepositoryCredentials:
            CredentialsParameter: !Ref "RegistryCredentias"
          PortMappings:
            - ContainerPort: 5701
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group:
                Fn::ImportValue: !Join [":", [!Ref "StackName", "AVLogGroup"]]
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref ServiceName
          Environment:
            - Name: QUARKUS_VERTX_CLUSTER_HOST
              Value: "0.0.0.0"
            - Name: QUARKUS_VERTX_CLUSTER_PUBLIC_HOST
              Value: !Join ["", [!Ref "ServiceName", ".av.local"]]
            - Name: AP_ADAPTER_URL_MP_REST_URL
              Value: "http://av-adapter.av.local:8080"
            - Name: AV_RUNNER_BINDIR
              Value: "/usr/local/bin"

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref "ServiceName"
      Cluster:
        Fn::ImportValue: !Join [":", [!Ref "StackName", "ClusterName"]]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref "DesiredCount"
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - Fn::ImportValue:
                !Join [":", [!Ref "StackName", "FargateContainerSecurityGroup"]]
          Subnets:
            - Fn::ImportValue:
                !Join [":", [!Ref "StackName", "PrivateSubnetOne"]]
            - Fn::ImportValue:
                !Join [":", [!Ref "StackName", "PrivateSubnetTwo"]]
      TaskDefinition: !Ref "TaskDefinition"
